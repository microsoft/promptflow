[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

# poetry
[tool.poetry]
name = "promptflow-evals"
# This version does not need to be changed, because it is set by the release pipeline.
# See build-publish-local-wheel-evals.yaml pipeline definition
# in Vienna PromptFlow repository for reference.
version = "0.1.0.dev0"
description = "Prompt flow evals"
license = "MIT"
authors = [
  "Microsoft Corporation <azuremlsdk@microsoft.com>"
]
repository = "https://github.com/microsoft/promptflow"
homepage = "https://microsoft.github.io/promptflow/"
readme = ["README.md"]
keywords = ["telemetry"]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
packages = [
  { include = "promptflow" }
]

[tool.poetry.urls]
"Bug Reports" = "https://github.com/microsoft/promptflow/issues"

# dependencies
[tool.poetry.dependencies]
python = "<4.0,>=3.8"
promptflow-devkit = "<2.0.0,>=1.13.0"
promptflow-core = "<2.0.0,>=1.13.0"
aiohttp_retry = ">=2.8.3"
websocket-client = ">=1.2.0"
jsonpath_ng = ">=1.5.0"
urllib3 = ">1.26.17"
numpy = ">=1.22"
promptflow-azure = { version = "<2.0.0,>=1.13.0", optional = true} # Needed for remote tracking
pyjwt = ">=2.8.0"
azure-identity = ">=1.17.1"
azure-core = ">=1.30.2"


[tool.poetry.extras]
azure = [
    "promptflow-azure"
]

[tool.poetry.group.dev.dependencies]
pre-commit = "*"
import-linter = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-mock = "*"
pytest-xdist = "*"

# test: pytest and coverage
[tool.pytest.ini_options]
markers = [
  "unittest",
  "e2etest",
]
# junit - analyse and publish test results (https://github.com/EnricoMi/publish-unit-test-result-action)
# durations - list the slowest test durations
addopts = """
--junit-xml=test-results.xml \
--dist loadfile \
--log-level=info \
--log-format="%(asctime)s %(levelname)s %(message)s" \
--log-date-format="[%Y-%m-%d %H:%M:%S]" \
--durations=5 \
-ra \
-vv
"""
env = [
]
testpaths = ["tests"]

[tool.coverage.run]
concurrency = ["multiprocessing"]
source = ["promptflow"]
omit = [
  "__init__.py",
]

[tool.black]
line-length = 120

# import linter
# reference: https://pypi.org/project/import-linter/
[tool.importlinter]
root_package = "promptflow"
include_external_packages = "True"

[[tool.importlinter.contracts]]
name = "Contract forbidden modules"
type = "forbidden"
source_modules = ["promptflow.evals"]
forbidden_modules = []
